<div class="container mx-auto mb-6 p-6">
  <div class="flex justify-between items-center">
    <div class="relative w-80">
      <input type="text" id="search" class="w-full px-4 py-2 border rounded-lg" placeholder="Search SLA Tracking..." onkeyup="filterDropdown()">
      <div id="dropdown" class="absolute w-full bg-white border rounded-lg mt-1 shadow-lg max-h-40 overflow-y-auto hidden">
        <% @softwares.each do |software| %>
          <div class="dropdown-item px-4 py-2 hover:bg-gray-100 cursor-pointer" onclick="selectItem(this)"><%= software.name %></div>
        <% end %>
      </div>
    </div>

    <h1 class="text-3xl font-bold">All Stats Within Last 30 Days</h1>

    <button type="button" 
      onclick="refreshStats()" 
      class="text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center">
      Refresh
    </button>

  </div>

  <!-- Stats Section -->
  <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 mb-8 mt-6">
    <%= render 'dashboards/stat_card', title: "Initial Response Time - Breached", value: @stats[:breached_tickets_last_30_days], id: "initial_response_time_breached" %>
    <%= render 'dashboards/stat_card', title: "Initial Response Time - Not Breached", value: @stats[:not_breached_tickets_last_30_days], id: "initial_response_time_not_breached" %>
    <%= render 'dashboards/stat_card', title: "Target Repair Time - Breached", value: @stats[:response_breached_tickets_last_30_days], id: "target_repair_time_breached" %>
    <%= render 'dashboards/stat_card', title: "Target Repair Time - Not Breached", value: @stats[:not_response_breached_tickets_last_30_days], id: "target_repair_time_not_breached" %>
    <%= render 'dashboards/stat_card', title: "Target Resolution Time - Breached", value: @stats[:resolution_breached_tickets_last_30_days], id: "target_resolution_time_breached" %>
    <%= render 'dashboards/stat_card', title: "Target Resolution Time - Not Breached", value: @stats[:not_resolution_breached_tickets_last_30_days], id: "target_resolution_time_not_breached" %>
    <%= render 'dashboards/stat_card', title: "No SLA Count", value: @stats[:not_resolution_data_breached_tickets_last_30_days], id: "no_sla_count" %>
    <%= render 'dashboards/stat_card', title: "Total Tickets Last 30 days", value: @stats[:total_tickets_last_30_days], id: "total_tickets_last_30_days" %>
  </div>

  <!-- Charts Section -->
  <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
    <div class="bg-white p-4 shadow-md rounded-lg">
      <h2 class="text-lg font-semibold mb-3 text-center">Response Time (Breached vs Not Breached)</h2>
      <div id="responseTimeChart">
        <%= pie_chart [["Breached", @stats[:response_breached_tickets_last_30_days]], ["Not Breached", @stats[:not_response_breached_tickets_last_30_days]]], id: "responseTimeChart" %>
      </div>
    </div>

    <div class="bg-white p-4 shadow-md rounded-lg">
      <h2 class="text-lg font-semibold mb-3 text-center">Target Resolution Time (Not Breached)</h2>
      <div id="resolutionTimeChart">
        <%= pie_chart [["Breached", @stats[:resolution_breached_tickets_last_30_days]], ["Not Breached", @stats[:not_resolution_breached_tickets_last_30_days]]], id: "resolutionTimeChart" %>
      </div>
    </div>
  </div>

  <!-- Charts Section -->
  <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-10">
      <div class="bg-white p-4 shadow-md rounded-lg">
        <h2 class="text-lg font-semibold mb-3 text-center">Response Time Assignees (Breached)</h2>
        <div id="breachedTicketsAssigneeChart">
          <%= pie_chart [["Breached", @stats[:response_breached_tickets_last_30_days]], ["Not Breached", @stats[:not_response_breached_tickets_last_30_days]]], id: "responseTimeChart" %>
        </div>
      </div>

      <div class="bg-white p-4 shadow-md rounded-lg">
        <h2 class="text-lg font-semibold mb-3 text-center">Target Resolution Time Assignees (Breached)</h2>
        <div id="resolutionTimeChartAssignee">
          <%= pie_chart [["Breached", @stats[:resolution_breached_tickets_last_30_days]], ["Not Breached", @stats[:not_resolution_breached_tickets_last_30_days]]], id: "resolutionTimeChart" %>
        </div>
      </div>
    </div>
  </div>

<script>
  let selectedSoftware = null;

  function filterDropdown() {
    let input = document.getElementById("search").value.toLowerCase();
    let dropdown = document.getElementById("dropdown");
    let items = dropdown.getElementsByClassName("dropdown-item");
    dropdown.classList.remove("hidden");

    for (let item of items) {
      let text = item.textContent || item.innerText;
      item.style.display = text.toLowerCase().includes(input) ? "block" : "none";
    }
  }

  function selectItem(element) {
    const softwareName = element.textContent.trim();
    document.getElementById("search").value = softwareName;
    selectedSoftware = softwareName; // Store the selected software

    // Remove 'selected' class from all items
    document.querySelectorAll(".dropdown-item").forEach(item => {
      item.classList.remove("selected");
    });

    // Add 'selected' class to clicked item
    element.classList.add("selected");
    document.getElementById("dropdown").classList.add("hidden");

    fetchStats(softwareName); // Call the fetch function
  }
  
  function refreshStats() {
    if (selectedSoftware) {
      fetchStats(selectedSoftware);
    } else {
      alert("Please select a software first.");
    }
  }

  function fetchStats(softwareName) {
    fetch(`/dashboards/fetch_stats?software_name=${softwareName}`)
      .then(response => response.json())
      .then(data => {
        document.getElementById("total_tickets_last_30_days").innerText = data.total_tickets_last_30_days;
        document.getElementById("initial_response_time_breached").innerText = data.breached_tickets_last_30_days;
        document.getElementById("initial_response_time_not_breached").innerText = data.not_breached_tickets_last_30_days;
        document.getElementById("target_repair_time_breached").innerText = data.response_breached_tickets_last_30_days;
        document.getElementById("target_repair_time_not_breached").innerText = data.not_response_breached_tickets_last_30_days;
        document.getElementById("target_resolution_time_breached").innerText = data.resolution_breached_tickets_last_30_days;
        document.getElementById("target_resolution_time_not_breached").innerText = data.not_resolution_breached_tickets_last_30_days;
        document.getElementById("no_sla_count").innerText = data.not_resolution_data_breached_tickets_last_30_days;

        // Refresh charts
        document.getElementById("responseTimeChart").innerHTML = "";
        new Chartkick.PieChart("responseTimeChart", [
          [`Breached (${data.response_breached_tickets_last_30_days})`, data.response_breached_tickets_last_30_days],
          [`Not Breached (${data.not_response_breached_tickets_last_30_days})`, data.not_response_breached_tickets_last_30_days]
        ]);

        document.getElementById("resolutionTimeChart").innerHTML = "";
        new Chartkick.PieChart("resolutionTimeChart", [
          [`Breached (${data.resolution_breached_tickets_last_30_days})`, data.resolution_breached_tickets_last_30_days],
          [`Not Breached (${data.not_resolution_breached_tickets_last_30_days})`, data.not_resolution_breached_tickets_last_30_days]
        ]);

        // Generate Assignee Breached Tickets Pie Chart
        document.getElementById("breachedTicketsAssigneeChart").innerHTML = "";
        let assigneeData = Object.entries(data.breached_tickets_per_assignee).map(([name, count]) => {
            // Ensure name is correctly formatted
            let formattedName = Array.isArray(name) ? name.join(" ") : String(name);
            return [`${formattedName} (${count})`, count];
        });
        new Chartkick.PieChart("breachedTicketsAssigneeChart", assigneeData, {
            legend: "right" // Move the legend to the right side
        });

      document.getElementById("resolutionTimeChartAssignee").innerHTML = "";
      let assigneeResolutionData = Object.entries(data.breached_resolution_tickets_per_assignee).map(([name, count]) => {
            // Ensure name is correctly formatted
            let formattedName = Array.isArray(name) ? name.join(" ") : String(name);
            return [`${formattedName} (${count})`, count];
        });
        new Chartkick.PieChart("resolutionTimeChartAssignee", assigneeResolutionData, {
            legend: "right" // Move the legend to the right side
        });
      })
      .catch(error => {
        console.error("Error fetching stats:", error);
      });
  }

  document.addEventListener("click", function(event) {
    let searchInput = document.getElementById("search");
    let dropdown = document.getElementById("dropdown");
    if (!searchInput.contains(event.target) && !dropdown.contains(event.target)) {
      dropdown.classList.add("hidden");
    }
  });
</script>
