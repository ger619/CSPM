<h1 class="flex justify-center text-xl font-bold mb-4">Breach Report</h1>

<div class="p-2 w-full mx-auto">
  <%= form_with url: breach_report_path, method: :get, local: true do |f| %>
    <div class="grid grid-cols-4 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-4 justify-center gap-2">
      <div class="col-span-1 flex flex-col ">
        <%= f.label :status, "Status", class: "capitalize text-xs font-bold" %>
        <%= f.select :status,
                     options_from_collection_for_select(Status.where(name: ['New', 'Closed', 'Resolved', 'Reopened', 'Under Development', 'Work in Progress', 'QA Testing', 'Awaiting Build', 'Client Confirmation Pending', 'On-Hold', 'Assigned', 'Declined']), :name, :name, params[:status]),
                     { include_blank: 'All Statuses' },
                     class: "h-10 border border-gray-300 rounded-lg dark:text-black px-2 text-sm" %>
      </div>

      <div class="col-span-1 flex flex-col">
        <%= f.label :priority, "Severity", class: "capitalize text-xs font-bold" %>
        <%= f.select :priority,
                     options_for_select(['SEVERITY 1', 'SEVERITY 2', 'SEVERITY 3', 'SEVERITY 4'], params[:priority]),
                     { include_blank: 'All Severities' },
                     class: "h-10 border border-gray-300 rounded-lg dark:text-black px-2 text-sm" %>
      </div>

      <div class="col-span-1 flex flex-col">
        <%= f.label :client_id, "Client", class: "capitalize text-xs font-bold" %>

        <div class="relative w-full">
          <!-- Searchable Input -->
          <input type="text" id="searchClient" class="h-10 border border-gray-300 rounded-lg dark:text-black px-2 text-sm w-full" placeholder="Search Client..." onkeyup="filterClientDropdown()">

          <!-- Dropdown List -->
          <div id="clientDropdown" class="absolute w-full bg-white border rounded-lg mt-1 shadow-lg max-h-40 overflow-y-auto hidden">
            <% clients = if current_user.has_role?(:admin) || current_user.has_role?(:observer)
                          Client.all
                        else
                          Client.joins(:projects).where(projects: { id: current_user.projects.pluck(:id) }).distinct
                        end %>
            <% clients.each do |client| %>
              <div class="dropdown-item px-4 py-2 hover:bg-gray-100 cursor-pointer" data-client-id="<%= client.id %>" onclick="selectClient(this)">
                <%= client.name %>
              </div>
            <% end %>
          </div>

          <!-- Hidden Input to store selected client ID -->
          <input type="hidden" id="selectedClientId" name="client_id" value="<%= params[:client_id] %>">
        </div>
      </div>
      <div class="w-full col-span-1 flex flex-col justify-center sm:justify-start pt-4">
        <%= f.submit "Generate Report", class: 'bg-[#3F8CFF] hover:bg-[#3A81EB] px-4 py-2 rounded font-bold text-white text-sm w-full sm:w-auto' %>
      </div>
    </div>
  <% end %>
</div>

<div class="mx-auto mb-4 px-4 sm:px-6 lg:px-8 py-8">
  <div class="flex justify-end">
    <%= link_to "Download CSV",
                breach_report_path(format: :csv, start_date: params[:start_date], end_date: params[:end_date], client_id: params[:client_id], status: params[:status], priority: params[:priority]),
                class: "mb-4 mt-4 h-12 bg-[#3F8CFF] hover:bg-[#3A81EB] p-3 rounded font-bold rounded-lg text-slate-100" %>
  </div>

  <!-- Scrollable table for smaller screens -->
  <div class="overflow-x-auto">
    <table id="breach_report" class="table-auto w-full">
      <thead>
        <tr>
          <th class="border border-black dark:border-slate-100 px-4 py-2">Created</th>
          <th class="border border-black dark:border-slate-100 px-4 py-2">Ticket ID</th>
          <th class="border border-black dark:border-slate-100 px-4 py-2">Support Desk</th>
          <th class="border border-black dark:border-slate-100 px-4 py-2">Severity</th>
          <th class="border border-black dark:border-slate-100 px-4 py-2">Summary</th>
          <th class="border border-black dark:border-slate-100 px-4 py-2">Issue Type</th>
          <th class="border border-black dark:border-slate-100 px-4 py-2">Status</th>
          <th class="border border-black dark:border-slate-100 px-4 py-2">Assigned To</th>
          <th class="border border-black dark:border-slate-100 px-4 py-2">Reporter</th>
          <th class="border border-black dark:border-slate-100 px-4 py-2">SLA Status</th>
          <th class="border border-black dark:border-slate-100 px-4 py-2">Target Response Deadline</th>
          <th class="border border-black dark:border-slate-100 px-4 py-2">Resolution Deadline</th>
        </tr>
      </thead>
      <tbody>
        <% @tickets.each do |ticket| %>
          <tr>
            <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.created_at.strftime("%d-%b-%y") %></td>
            <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.unique_id %></td>
            <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.project.title %></td>
            <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.priority %></td>
            <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.subject %></td>
            <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.issue %></td>
            <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.statuses.first&.name || "N/A" %></td>
            <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.users.map(&:name).select(&:present?).join(', ') %></td>
            <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.user.name %></td>
            <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.sla_ticket&.sla_status || "N/A" %></td>
            <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.sla_ticket&.sla_target_response_deadline.presence || 'not breached' %></td>
            <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.sla_ticket&.sla_resolution_deadline.presence || 'not breached' %></td>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>
</div>

<script>
  function filterClientDropdown() {
    let input = document.getElementById("searchClient").value.toLowerCase();
    let dropdown = document.getElementById("clientDropdown");
    let items = dropdown.getElementsByClassName("dropdown-item");

    dropdown.classList.remove("hidden");

    let hasMatch = false;
    for (let item of items) {
      let text = item.textContent.toLowerCase();
      if (text.includes(input)) {
        item.style.display = "block";
        hasMatch = true;
      } else {
        item.style.display = "none";
      }
    }

    if (!hasMatch) {
      dropdown.classList.add("hidden");
    }
  }

  function selectClient(element) {
    let clientName = element.textContent.trim();
    let clientId = element.getAttribute("data-client-id");

    let inputField = document.getElementById("searchClient");
    inputField.value = clientName;
    inputField.style.paddingRight = "12px"; // Prevents text from being cut off
    inputField.style.overflow = "visible"; // Ensures full visibility

    document.getElementById("selectedClientId").value = clientId;
    document.getElementById("clientDropdown").classList.add("hidden");
  }

  document.addEventListener("click", function(event) {
    let dropdown = document.getElementById("clientDropdown");
    let searchInput = document.getElementById("searchClient");

    if (!searchInput.contains(event.target) && !dropdown.contains(event.target)) {
      dropdown.classList.add("hidden");
    }
  });
</script>
