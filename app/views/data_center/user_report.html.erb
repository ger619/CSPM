<h1 class="flex justify-center text-2xl font-bold mb-4">User Report</h1>
<div class="p-2 w-full">
  <%= form_with url: user_report_path, method: :get, local: true do |f| %>
    <div class="flex justify-center gap-2">
      <div class="flex flex-col gap-2">
        <%= f.label :user_id, "Taskbridge Users", class: "capitalize text-sm font-bold w-full align-middle pt-3" %>
        <div class="relative w-full">
          <!-- Searchable Input -->
          <input type="text" id="searchUser" class="h-12 border border-[#3F8CFF] hover:border-[#3A81EB] border-2 rounded-lg dark:text-black px-2 w-full" autocomplete="off" onclick="showDropdown()" placeholder="Search User..." onkeyup="filterUserDropdown()">
          <!-- Dropdown List -->
          <div id="userDropdown" class="absolute w-full bg-white border rounded-lg mt-1 shadow-lg max-h-40 overflow-y-auto hidden">
            <% users = User.with_role(:agent).or(User.with_role(:project_manager)).or(User.with_role(:admin)) %>
            <% users.each do |user| %>
              <div class="dropdown-item px-4 py-2 hover:bg-gray-100 cursor-pointer" data-user-id="<%= user.id %>" onclick="selectUser(this)">
                <%= user.name || user.email %>
              </div>
            <% end %>
          </div>

          <!-- Hidden Input to store selected user ID -->
          <input type="hidden" id="selectedUserId" name="user_id" required>
        </div>
      </div>
      <div class="flex flex-col gap-2">
        <%= f.label :start_date, "Start Date", class: "capitalize text-sm font-bold w-full align-middle pt-3" %>
        <%= f.date_field :start_date, class: "h-12 border border-[#3F8CFF] hover:border-[#3A81EB] border-2 rounded-lg dark:text-black px-2 w-full" %>
      </div>
      <div class="flex flex-col gap-2">
        <%= f.label :end_date, "End Date", class: "capitalize text-sm font-bold w-full align-middle pt-3" %>
        <%= f.date_field :end_date, class: "h-12 border border-[#3F8CFF] hover:border-[#3A81EB] border-2 rounded-lg dark:text-black px-2 w-full" %>
      </div>
      <div class="gap-2 pt-10">
        <%= f.submit "Generate Report", class: 'mb-4 h-12 bg-[#3F8CFF] hover:bg-[#3A81EB] p-3 rounded font-bold rounded-lg text-slate-100' %>
      </div>
    </div>
  <% end %>
</div>

<% if @users.any? %>
  <div class="flex justify-between gap-2">
    <div class="mb-4 px-4 sm:px-6 lg:px-8 py-8">
      <h2 class="text-xl font-bold mb-4 text-center">User Report for <%= @users.first.name %></h2>
      <div class="grid grid-cols-5">
        <div class="mb-4 px-4 sm:px-6 lg:px-8 py-8 col-span-4">
          <h2 class="text-xl font-bold mb-4 text-center">Ticket Status Summary</h2>
          <div class="grid grid-cols-4">
            <div class="col-span-3">
              <%= column_chart @status_counts, height: "300px", library: {
                title: { text: "Ticket Status Distribution" },
                plotOptions: {
                  series: {
                    colors: @status_counts.keys.map { |status| status == "Closed" ? "black" : nil }
                  }
                }
              } %>
            </div>
            <div class="col-span-1 ml-4">
              <ul>
                <% @status_counts.each do |status, count| %>
                  <li><%= status %>: <%= count %></li>
                <% end %>
              </ul>
            </div>
          </div>
        </div>
        <div class="col-span-1">
          <%= pie_chart [
                          ["Met Deadline", @users.sum { |user| user.tickets.count { |ticket| SlaTicket.find_by(ticket_id: ticket.id)&.sla_target_response_deadline == "Not Breached" } }],
                          ["Missed Deadline", @users.sum { |user| user.tickets.count { |ticket| SlaTicket.find_by(ticket_id: ticket.id)&.sla_target_response_deadline == "Breached" } }],
                          ["Pending", @users.sum { |user| user.tickets.count { |ticket| SlaTicket.find_by(ticket_id: ticket.id)&.sla_target_response_deadline.nil? } }]
                        ] %>
        </div>
      </div>
    </div>
  </div>

  <div class="mx-auto mb-4 px-4 sm:px-6 lg:px-8 py-8">
    <div class="flex justify-end">
      <%= link_to "Download CSV",
                  user_report_path(format: :csv, start_date: params[:start_date], end_date: params[:end_date], user_id: params[:user_id]),
                  class: "mb-4 mt-4 h-12 bg-[#3F8CFF] hover:bg-[#3A81EB] p-3 rounded font-bold rounded-lg text-slate-100" %>
    </div>
    <table id="user_report" class="table-auto w-full">
      <thead>
      <tr>
        <th class="border border-black dark:border-slate-100 px-4 py-2">Client Name</th>
        <th class="border border-black dark:border-slate-100 px-4 py-2">Number of Tickets</th>
        <th class="border border-black dark:border-slate-100 px-4 py-2">View Tickets</th>
      </tr>
      </thead>
      <tbody>
      <% @tickets_by_client.each do |client_name, tickets| %>
        <tr>
          <td class="border border-black dark:border-slate-100 px-4 py-2"><%= client_name %></td>
          <td class="border border-black dark:border-slate-100 px-4 py-2"><%= tickets.count %></td>
          <td class="border border-black dark:border-slate-100 px-4 py-2">
            <%= link_to "View Tickets", user_report_view_path(user_id: params[:user_id], client_name: client_name, start_date: params[:start_date], end_date: params[:end_date]), class: 'bg-[#3A81EB] p-2 rounded font-bold rounded-lg text-slate-100' %>          </td>
        </tr>
      <% end %>
      </tbody>
    </table>
  </div>
<% end %>

<script>
  function showDropdown() {
    document.getElementById("userDropdown").classList.remove("hidden");
  }

  function hideDropdown(event) {
    if (!event.target.closest(".relative")) {
      document.getElementById("userDropdown").classList.add("hidden");
    }
  }

  function filterUserDropdown() {
    let input = document.getElementById("searchUser").value.toLowerCase();
    let dropdown = document.getElementById("userDropdown");
    let items = dropdown.getElementsByClassName("dropdown-item");

    dropdown.classList.remove("hidden");

    let hasMatch = false;
    for (let item of items) {
      let text = item.textContent.toLowerCase();
      if (text.includes(input)) {
        item.style.display = "block";
        hasMatch = true;
      } else {
        item.style.display = "none";
      }
    }

    if (!hasMatch) {
      dropdown.classList.add("hidden");
    }
  }

  function selectUser(element) {
    let userName = element.textContent.trim();
    let userId = element.getAttribute("data-user-id");

    let inputField = document.getElementById("searchUser");
    inputField.value = userName;
    inputField.style.paddingRight = "12px"; // Prevents text from being cut off
    inputField.style.overflow = "visible"; // Ensures full visibility

    document.getElementById("selectedUserId").value = userId;
    document.getElementById("userDropdown").classList.add("hidden");
  }

  document.addEventListener("click", function(event) {
    let dropdown = document.getElementById("userDropdown");
    let searchInput = document.getElementById("searchUser");

    if (!searchInput.contains(event.target) && !dropdown.contains(event.target)) {
      dropdown.classList.add("hidden");
    }
  });
</script>