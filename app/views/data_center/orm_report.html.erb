<!-- app/views/data_center/orm_report.html.erb -->

<h1 class="flex justify-center text-2xl font-bold mb-4">ORM Report</h1>
<div class="p-2 w-full">
  <%= form_with url: orm_report_path, method: :get, local: true do |f| %>
    <div class="flex flex-wrap justify-center gap-2">
      <div class="flex flex-col gap-2">
        <%= f.label :days, "Closed & Resolved for the last (days)", class: "capitalize text-sm font-bold w-full align-middle p-2" %>
        <%= f.number_field :days, value: params[:days], class: "border border-[#3F8CFF] hover:border-[#3A81EB] border-2 rounded-lg dark:text-black w-full p-2" %>
      </div>
      <div class="flex flex-col gap-2">
        <%= f.label :client_id, "Client", class: "capitalize text-sm font-bold w-full align-middle p-2" %>
        <div class="relative w-full">
          <!-- Searchable Input -->
          <input type="text" id="searchClient" class="border border-[#3F8CFF] hover:border-[#3A81EB] border-2 rounded-lg dark:text-black w-full p-2" placeholder="Search Client..." onkeyup="filterClientDropdown()">

          <!-- Dropdown List -->
          <div id="clientDropdown" class="absolute w-full bg-white border rounded-lg mt-1 shadow-lg max-h-40 overflow-y-auto hidden">
            <% clients = if current_user.has_role?(:admin) || current_user.has_role?(:observer)
                           Client.all
                         else
                           Client.joins(:projects).where(projects: { id: current_user.projects.ids }).distinct
                         end %>
            <% clients.each do |client| %>
              <div class="dropdown-item px-4 py-2 hover:bg-gray-100 cursor-pointer" data-client-id="<%= client.id %>" onclick="selectClient(this)">
                <%= client.name %>
              </div>
            <% end %>
          </div>

          <!-- Hidden Input to store selected client ID -->
          <input type="hidden" id="selectedClientId" name="client_id">
        </div>
      </div>
      <div class="flex flex-col gap-2 w-full sm:w-1/6 md:w-1/6 pt-10">
        <%= f.submit "Generate Report", class: 'bg-[#3F8CFF] hover:bg-[#3A81EB] p-3 rounded font-bold rounded-lg text-slate-100 w-full sm:w-auto', data: { onclick: "initializeClientDropdown()" } %>
      </div>
    </div>
  <% end %>
</div>

<% if @tickets.present? %>
  <div class="mx-auto mb-4 px-4 sm:px-6 lg:px-8 py-8">
    <div class="flex justify-end">
      <%= link_to "Download CSV",
                  orm_report_path(format: :csv, start_date: params[:start_date], end_date: params[:end_date], client_id: params[:client_id], status: params[:status], days: params[:days]),
                  class: "mb-4 mt-4 h-12 bg-[#3F8CFF] hover:bg-[#3A81EB] p-3 rounded font-bold rounded-lg text-slate-100" %>
    </div>
    <table id="orm_report" class="table-auto w-full mb-4">
      <thead>
      <tr>
        <th class="border border-black px-4 py-2">Project Name</th>
        <th class="border border-black px-4 py-2">Total Number of Tickets</th>
        <th class="border border-black px-4 py-2">Status</th>
        <th class="border border-black px-4 py-2">Count</th>
      </tr>
      </thead>
      <tbody>
      <% @ticket_counts.each do |project_id, total_count| %>
        <% project = Project.find(project_id) %>
        <tr>
          <td class="capitalize border border-black px-4 py-2" rowspan="<%= @project_status_counts.select { |k, _| k.first == project_id }.size + 1 %>"><%= project.title %></td>
          <td class="border border-black px-4 py-2" rowspan="<%= @project_status_counts.select { |k, _| k.first == project_id }.size + 1 %>"><%= total_count %></td>
        </tr>
        <% @project_status_counts.select { |k, _| k.first == project_id }.each do |(proj_id, status), count| %>
          <tr>
            <td class="border border-black px-4 py-2"><%= status %></td>
            <td class="border border-black px-4 py-2"><%= count %></td>
          </tr>
        <% end %>
      <% end %>
      </tbody>
    </table>

    <table id="orm_report" class="table-auto w-full">
      <thead>
      <tr>
        <th class="border border-black px-4 py-2">Client</th>
        <th class="border border-black px-4 py-2">Ticket ID</th>
        <th class="border border-black px-4 py-2">Issue Type</th>
        <th class="border border-black px-4 py-2">Assignee</th>
        <th class="border border-black px-4 py-2">Reporter</th>
        <th class="border border-black px-4 py-2">Severity</th>
        <th class="border border-black px-4 py-2">Status</th>
        <th class="border border-black px-4 py-2">Created at</th>
        <th class="border border-black px-4 py-2">updated at</th>
        <th class="border border-black px-4 py-2">Summary</th>
        <th class="border border-black px-4 py-2">Details</th>



      </tr>
      </thead>
      <tbody>
      <% @tickets.each do |ticket| %>
        <% row_class = case ticket.statuses.first&.name
                       when 'New'
                         'bg-red-500'
                       when 'Closed', 'Resolved'
                         'bg-green-500'
                       when 'Reopened'
                         'bg-red-900'
                       when 'Under Development'
                         'bg-blue-300'
                       when 'Work in Progress'
                         'bg-gray-500'
                       when 'QA Testing'
                         'bg-pink-500'
                       when 'Awaiting Build'
                         'bg-gray-800'
                       when 'Client Confirmation Pending'
                         'bg-purple-500'
                       when 'On-Hold'
                         'bg-yellow-300'
                       when 'Assigned'
                         'bg-blue-800'
                       when 'Declined'
                         'bg-gray-800'
                       when 'Approved'
                         'bg-green-700'
                       when 'Pending'
                         'bg-gradient-to-r from-red-800 to-green-800'
                       else
                         ''
                       end %>
        <tr class="<%= row_class %> text-white text-bold">
          <td class="border border-black  dark:border-slate-100 px-4 py-2"><%= ticket.project.client.name %></td>
          <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.unique_id %></td>
          <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.issue %></td>
          <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.users.map(&:name).select(&:present?).join(', ') %></td>
          <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.user.name %></td>
          <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.priority %></td>
          <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.statuses.first&.name || 'N/A' %></td>
          <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.created_at.strftime("%d-%b-%Y") %></td>
          <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.updated_at.strftime("%d-%b-%Y") %></td>
          <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.subject %></td>
          <td class="border border-black dark:border-slate-100 px-4 py-2"><%= ticket.content.to_plain_text.truncate(3000) %></td>


        </tr>
      <% end %>
      </tbody>
    </table>
  </div>
<% end %>

<script>
  function initializeClientDropdown() {
    function filterClientDropdown() {
      let input = document.getElementById("searchClient").value.toLowerCase();
      let dropdown = document.getElementById("clientDropdown");
      let items = dropdown.getElementsByClassName("dropdown-item");

      dropdown.classList.remove("hidden");

      let hasMatch = false;
      for (let item of items) {
        let text = item.textContent.toLowerCase();
        if (text.includes(input)) {
          item.style.display = "block";
          hasMatch = true;
        } else {
          item.style.display = "none";
        }
      }

      if (!hasMatch) {
        dropdown.classList.add("hidden");
      }
    }

    function selectClient(element) {
      let clientName = element.textContent.trim();
      let clientId = element.getAttribute("data-client-id");

      let inputField = document.getElementById("searchClient");
      inputField.value = clientName;
      inputField.style.paddingRight = "12px";
      inputField.style.overflow = "visible";

      document.getElementById("selectedClientId").value = clientId;
      document.getElementById("clientDropdown").classList.add("hidden");
    }

    document.addEventListener("click", function(event) {
      let dropdown = document.getElementById("clientDropdown");
      let searchInput = document.getElementById("searchClient");

      if (!searchInput.contains(event.target) && !dropdown.contains(event.target)) {
        dropdown.classList.add("hidden");
      }
    });

    window.filterClientDropdown = filterClientDropdown;
    window.selectClient = selectClient;
  }

  document.addEventListener('DOMContentLoaded', initializeClientDropdown);
</script>