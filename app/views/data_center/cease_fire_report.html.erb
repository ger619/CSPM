<% if current_user.has_role?(:admin) or current_user.has_role?('project manager') %>
  <h1 class="flex justify-center text-2xl font-bold mb-4">Cease Fire Report</h1>
<% else %>
  <h1 class="flex justify-center text-2xl font-bold mb-4">Status Report</h1>
<% end %>
<div class="p-2 w-full">
  <%= form_with url: cease_fire_report_path, method: :get, local: true do |f| %>
    <div class="flex flex-wrap justify-center gap-2">
      <div class="flex flex-col gap-2 w-full sm:w-1/2 md:w-1/3">
        <%= f.label :status, "Status", class: "capitalize text-sm font-bold w-full align-middle pt-3" %>
        <%= f.select :status,
                     options_from_collection_for_select(Status.where(name: ['New', 'Closed', 'Resolved', 'Reopened', 'Under Development', 'Work in Progress', 'QA Testing', 'Awaiting Build', 'Client Confirmation Pending', 'On-Hold', 'Assigned', 'Declined']), :name, :name, params[:status]),
                     { include_blank: 'All Statuses', multiple: true },
                     class: "border border-[#3F8CFF] hover:border-[#3A81EB] border-2 rounded-lg dark:text-black w-full", id: "statusSelect" %>
      </div>
      <script>
        document.addEventListener('turbo:load', function() {
          const statusSelect = document.getElementById('statusSelect');

          statusSelect.addEventListener('change', function() {
            const allStatuses = Array.from(statusSelect.options).slice(1); // Exclude the blank option
            const blankOption = statusSelect.options[0];

            if (blankOption.selected) {
              allStatuses.forEach(option => option.selected = true);
            } else {
              blankOption.selected = false;
            }
          });
        });
      </script>

        <div class="flex flex-col gap-2 w-full sm:w-1/2 md:w-1/3 relative">
          <label for="searchClient" class="capitalize text-sm font-bold w-full align-middle pt-3">Client</label>

          <!-- Searchable Input -->
          <input type="text" id="searchClient" class="h-12 border border-[#3F8CFF] hover:border-[#3A81EB] border-2 rounded-lg dark:text-black w-full px-4 py-2" placeholder="Search Client..." onkeyup="filterClientDropdown()">

          <!-- Dropdown List -->
          <div id="clientDropdown" class="absolute top-full left-0 w-full bg-white border border-[#3F8CFF] rounded-lg mt-1 shadow-lg max-h-40 overflow-y-auto hidden z-10">
            <div class="dropdown-item px-4 py-2 hover:bg-gray-100 cursor-pointer" data-client-id="" onclick="selectClient(this)">All Clients</div>
            <% (current_user.has_role?(:admin) || current_user.has_role?(:observer) ? Client.all : Client.joins(:projects).where(projects: { id: current_user.projects.pluck(:id) }).distinct).each do |client| %>
              <div class="dropdown-item px-4 py-2 hover:bg-gray-100 cursor-pointer" data-client-id="<%= client.id %>" onclick="selectClient(this)">
                <%= client.name %>
              </div>
            <% end %>
          </div>

          <!-- Hidden Input to store selected client ID -->
          <input type="hidden" id="selectedClientId" name="client_id">
        </div>

      <div class="flex flex-col gap-2 w-full sm:w-1/2 md:w-1/3">
        <%= f.label :start_date, "Start Date", class: "capitalize text-sm font-bold w-full align-middle pt-3" %>
        <%= f.date_field :start_date, value: params[:start_date], class: "border border-[#3F8CFF] hover:border-[#3A81EB] border-2 rounded-lg dark:text-black w-full" %>
      </div>

      <div class="flex flex-col gap-2 w-full sm:w-1/2 md:w-1/3">
        <%= f.label :end_date, "End Date", class: "capitalize text-sm font-bold w-full align-middle pt-3" %>
        <%= f.date_field :end_date, value: params[:end_date], class: "border border-[#3F8CFF] hover:border-[#3A81EB] border-2 rounded-lg dark:text-black w-full" %>
      </div>


      <div class="w-full flex justify-center pt-10">
        <%= f.submit "Generate Report", class: 'mb-4 h-12 bg-[#3F8CFF] hover:bg-[#3A81EB] p-3 rounded font-bold rounded-lg text-slate-100 w-full sm:w-auto' %>
      </div>
    </div>
  <% end %>
</div>

<% if @tickets.any? %>

  <div class="container mx-auto mb-4 px-4 sm:px-6 lg:px-8 py-8">
    <h2 class="text-xl font-bold mb-4 text-center">
      Ticket Status Report AS AT <%= Date.today %>
    </h2>
    <div class="grid grid-cols-3">
      <div class="col-span-2">
        <%= pie_chart @status_counts, height: "400px", library: { title: { text: "Ticket Status Distribution" } } %>
      </div>

      <div class="col-span-1">
        <ul>
          <% @status_counts.each do |status, count| %>
            <li><%= status %>: <%= count %></li>
          <% end %>
        </ul>
      </div>
    </div>

  </div>

  <div class="container mx-auto mb-4 px-4 sm:px-6 lg:px-8 py-8">
    <div class="flex justify-end">
      <%= link_to "Download CSV",
                  cease_fire_report_path(format: :csv, start_date: params[:start_date], end_date: params[:end_date], client_id: params[:client_id], status: params[:status]),
                  class: "mb-4 mt-4 h-12 bg-[#3F8CFF] hover:bg-[#3A81EB] p-3 rounded font-bold rounded-lg text-slate-100" %>
    </div>
    <table id="ceasefire" class="table-auto w-full">
      <thead>
      <tr>
        <th class="px-4 py-2">Created</th>
        <th class="px-4 py-2">Ticket ID</th>
        <th class="px-4 py-2">Project Name</th>
        <th class="px-4 py-2">Severity</th>
        <th class="px-4 py-2">Summary</th>
        <th class="px-4 py-2">Issue Type</th>
        <th class="px-4 py-2">Status</th>
        <th class="px-4 py-2">Assigned To</th>
        <th class="px-4 py-2">Reporter</th>
        <th class="px-4 py-2">Details</th>
      </tr>
      </thead>
      <tbody>
      <% @tickets.each do |ticket| %>
        <% row_class = case ticket.statuses.first&.name
                       when 'New'
                         'bg-red-500'
                       when 'Closed', 'Resolved'
                         'bg-green-500'
                       when 'Reopened'
                         'bg-red-900'
                       when 'Under Development'
                         'bg-blue-300'
                       when 'Work in Progress'
                         'bg-gray-500'
                       when 'QA Testing'
                         'bg-pink-500'
                       when 'Awaiting Build'
                         'bg-gray-800'
                       when 'Client Confirmation Pending'
                         'bg-purple-500'
                       when 'On-Hold'
                         'bg-yellow-300'
                       when 'Assigned'
                         'bg-blue-800'
                       when 'Declined'
                         'bg-gray-800'
                       else
                         ''
                       end %>
        <tr class="<%= row_class %>">
          <td class="border px-4 py-2"><%= ticket.created_at.strftime("%d- %b -%y") %></td>
          <td class="border px-4 py-2"><%= ticket.unique_id %></td>
          <td class="border px-4 py-2"><%= ticket.project.title %></td>
          <td class="border px-4 py-2"><%= ticket.priority %></td>
          <td class="border px-4 py-2"><%= ticket.subject %></td>
          <td class="border px-4 py-2"><%= ticket.issue %></td>
          <td class="border px-4 py-2"><%= ticket.statuses.first&.name || "N/A" %></td>
          <td class="border px-4 py-2">
            <% ticket.users.each do |user| %>
              <% if user.name.present? %>
                <%= user.name %>
              <% end %>
            <% end %></td>
          <td class="border px-4 py-2"><%= ticket.user.name %></td>
          <td class="border px-4 py-2"><%= ticket.content.to_plain_text.truncate(800) %></td>
        </tr>
      <% end %>
      </tbody>
    </table>
  </div>
<% end %>

<script>
  function filterClientDropdown() {
    let input = document.getElementById("searchClient").value.toLowerCase();
    let dropdown = document.getElementById("clientDropdown");
    let items = dropdown.getElementsByClassName("dropdown-item");

    dropdown.classList.remove("hidden");

    let hasMatch = false;
    for (let item of items) {
      let text = item.textContent.toLowerCase();
      if (text.includes(input)) {
        item.style.display = "block";
        hasMatch = true;
      } else {
        item.style.display = "none";
      }
    }

    if (!hasMatch) {
      dropdown.classList.add("hidden");
    }
  }

  function selectClient(element) {
    let clientName = element.textContent.trim();
    let clientId = element.getAttribute("data-client-id");

    let inputField = document.getElementById("searchClient");
    inputField.value = clientName;
    inputField.style.overflow = "visible";

    document.getElementById("selectedClientId").value = clientId;
    document.getElementById("clientDropdown").classList.add("hidden");
  }

  document.addEventListener("click", function(event) {
    let dropdown = document.getElementById("clientDropdown");
    let searchInput = document.getElementById("searchClient");

    if (!searchInput.contains(event.target) && !dropdown.contains(event.target)) {
      dropdown.classList.add("hidden");
    }
  });
</script>
