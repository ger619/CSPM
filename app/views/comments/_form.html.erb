<% if current_user.has_role? :admin or current_user.has_role?('project manager') or current_user.has_role?(:agent) %>
  <%= form_with(model: [project, ticket, ticket.comments.build], data: { turbo: false }) do |f| %>
    <div class="relative z-0 w-full mb-6 group">
      <div class="flex justify-between mb-4">
        <%= @ticket.statuses.pluck('statuses.name').first %>

        <!-- Close Icon -->
        <%= link_to cancel_redirect_path, class: "absolute top-2 right-4 text-gray-500 hover:text-gray-700" do %>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        <% end %>
      </div>
      <%= f.hidden_field :status, value: @ticket.statuses.pluck('statuses.name').first %>
      <%= f.label :what, 'What?', class: "capitalize block mb-1 text-sm font-medium text-gray-900 dark:text-white" %><br />
      <%= f.text_field :what, class: "border border-gray-300 rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500", placeholder: '', required: true %>
    </div>
    <div class="relative z-0 w-full mb-6 group">
      <%= f.label :why, 'Why?', class: "capitalize block mb-1 text-sm font-medium text-gray-900 dark:text-white" %><br />
      <%= f.text_field :why, class: "border border-gray-300 rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500", placeholder: '', required: true %>
    </div>
    <h3 class="pb-2 font-bold"> Solution</h3>
    <div class="relative z-0 w-full mb-6 group">
      <div data-controller="text-limit" data-text-limit-limit-value="800">
        <p id="char-count">0/800</p>
        <%= f.rich_text_area :content, id: "content", data: { text_limit_target: "content" }, class: 'h-[200px]' %>
      </div>
    </div>
    <div class="relative z-0 w-full mb-6 group">
      <%= f.label :notify_users, 'Notify Users', class: "capitalize block mb-1 text-sm font-medium text-gray-900 dark:text-white" %><br />
      <%= f.collection_select :user_ids, @project.users, :id, :name, {}, multiple: true, class: "border border-gray-300 rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500" %>
    </div>
    <%= f.submit "Submit", class: 'mt-4 w-2/5 h-12 border border-b-4 border-r-2 border-black dark:border-slate-100 p-3 font-semibold rounded' %>
  <% end %>
<% elsif  current_user.has_role? :client %>
  <%= form_with(model: [project, ticket, ticket.comments.build], data: {turbo: false}) do |f| %>
    <div class="relative z-0 w-full mb-6 group">
      <%= @ticket.status %>
      <%= f.hidden_field :status, value: ticket.status %>
      <%= f.label :what, 'Reason', class: "capitalize block mb-1 text-sm font-medium text-gray-900 dark:text-white" %><br />
      <%= f.text_field :what,  class: "border border-gray-300 rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500", placeholder: '', required: true %>
    </div>
    <h3 class="pb-2 font-bold"> Clarification</h3>
    <div class="relative z-0 w-full mb-6 group">
      <div data-controller="text-limit" data-text-limit-limit-value="200">
        <p id="char-count">0/200</p>
        <%= f.rich_text_area :content, id: "content", data: { text_limit_target: "content" }, class: 'min-h-[300px]', maxlength: 200 %>
      </div>
    </div>
    <%= f.submit "Submit", class: 'mt-4 h-12 border border-b-4 border-r-2 border-black dark:border-slate-100 p-3 font-semibold rounded' %>
  <% end %>
<% end %>

<script>
  document.addEventListener("turbo:load", function () {
    var tribute = new Tribute({
      trigger: '@', // Triggers the dropdown when '@' is typed
      allowSpaces: false,
      lookup: 'name', // We'll combine first_name and last_name as 'name'
      values: async (text, cb) => {
        let response = await fetch(`/users/search?q=${text}`);
        let users = await response.json();

        // Combine first_name and last_name for display
        cb(users.map(user => ({
          key: `${user.first_name} ${user.last_name}`, // Display both first and last names
          value: `${user.first_name} ${user.last_name}` // Insert full name
        })));
      },
      menuItemTemplate: function (item) {
        // Display full name in the dropdown
        return `<span>${item.original.key}</span>`;
      },
      selectTemplate: function (item) {
        // Use only first_name for selection but show full name in input
        return `@${item.original.value}`;
      },
      menuClass: 'tribute-container', // Add custom class to the menu for styling
      positionMenu: function (menu, trigger) {
        const rect = trigger.getBoundingClientRect();
        menu.style.left = `${rect.left}px`;
        menu.style.top = `${rect.bottom + window.scrollY}px`;  // Adjusts menu placement below the text area
        menu.style.width = `${rect.width}px`;  // Ensure menu matches the width of the text area
      }
    });

    let editor = document.querySelector("#content");
    tribute.attach(editor);
  });
</script>