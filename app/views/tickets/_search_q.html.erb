<div class="flex p-2 items-center w-full justify-center">
  <%= form_with url: project_path(@project), method: :get, class: 'flex gap-2' do |f| %>
    <div class="flex-wrap flex items-center justify-around gap-2">

      <div class="flex flex-col">
        <%= label_tag :order, 'Last Updated At' %>
        <%= f.select :order, options_for_select([%w[Oldest asc], %w[Latest desc]], params[:order]),
                       { include_blank: 'Select Order' },
                       prompt: 'Select Order',
                       class: "border py-2 pl-4 pr-8 border-[#3F8CFF] hover:border-[#3A81EB] border-2 rounded-md dark:bg-gray-900" %>
      </div>
      <div class="flex flex-col">
        <%= label_tag :start_date, 'Start Date' %>
        <%= f.date_field :start_date, class: "border py-2 px-4 git border-[#3F8CFF] hover:border-[#3A81EB] border-2 rounded-md dark:bg-gray-900" %>
      </div>

      <div class="flex flex-col">
        <%= label_tag :end_date, 'End Date' %>
        <%= f.date_field :end_date, class: "border py-2 px-4 border-[#3F8CFF] hover:border-[#3A81EB] border-2 rounded-md dark:bg-gray-900" %>
      </div>


      <div class="flex flex-wrap justify-center">
        <div class="flex flex-col relative">
          <label for="searchStatus" class="w-full align-middle">Status</label>
          <!-- Searchable Input -->
          <input type="text" id="searchStatus" class="border border-[#3F8CFF] hover:border-[#3A81EB] border-2 rounded-lg bg-slate-100 dark:bg-gray-900 text-gray-900 dark:text-slate-100 w-full px-4 py-2" placeholder="Search Status...">
          <!-- Dropdown List -->
          <div id="statusDropdown" class="absolute top-16 left-0 w-full bg-white border border-[#3F8CFF] rounded-lg mt-1 shadow-lg max-h-60 overflow-y-auto hidden z-10">
            <% @statuses.each do |status| %>
              <div class="dropdown-item px-4 py-2 hover:bg-gray-100 cursor-pointer bg-slate-100 dark:bg-gray-900 text-gray-900 dark:text-slate-100">
                <label>
                  <input type="checkbox" value="<%= status %>" data-status-name="<%= status %>" class="status-checkbox mr-2 capitalize">
                  <%= status %>
                </label>
              </div>
            <% end %>
          </div>

          <!-- Hidden Input to store multiple selected statuses -->
          <div id="selectedStatusesWrapper"></div>
        </div>
      </div>



      <div class="flex flex-col">
        <%= label_tag :priority, 'Priority' %>
        <%= f.select :priority, options_for_select(['SEVERITY 1', 'SEVERITY 2', 'SEVERITY 3', 'SEVERITY 4'], params[:priority]),
                     { include_blank: 'All Severity' },
                     prompt: 'Select Priority', class: "border py-2 pl-4 pr-8 border-[#3F8CFF] hover:border-[#3A81EB] border-2 rounded-md dark:bg-gray-900" %>
      </div>

      <div class="flex flex-col">
        <%= label_tag :issue, 'Issue' %>
        <%= f.select :issue, options_for_select(['SUPPORT', 'NEW FEATURE', 'BUG', 'REQUEST', 'INCIDENT'], params[:issue]),
                     { include_blank: 'All Issues' },
                     prompt: 'Select Issue',
                     class: "border py-2 px-4 border-[#3F8CFF] hover:border-[#3A81EB] border-2 rounded-md dark:bg-gray-900" %>
      </div>
      <% if current_user.has_role?(:agent) or current_user.has_role?('project manager') or current_user.has_role?(:admin) or current_user.has_role?(:observer) %>
        <div class="flex flex-col">
          <%= label_tag :users, 'Assignee' %>
          <%= f.select :user_id, options_from_collection_for_select(@project.users.with_assigned_role, :id, ->(u) { "#{u.first_name} #{u.last_name}" }, params[:user_id]),
                       { include_blank: 'All Users' },
                       prompt: 'Select User',
                       class: "border py-2 px-4 border-[#3F8CFF] hover:border-[#3A81EB] border-2 rounded-md dark:bg-gray-900" %>
        </div>
      <% end %>

      <div class="flex flex-col mt-5">
        <%= submit_tag 'Search', class: 'bg-[#3F8CFF] hover:bg-[#3A81EB] p-2 rounded font-bold rounded-md text-slate-100 mr-1' %>
      </div>

    </div>
  <% end %>


  <%= form_with url: project_path(@project), method: :get, class: 'gap-2 mt-2' do |f| %>
    <%= f.submit "Clear", class: 'bg-[#3F8CFF] hover:bg-[#3A81EB] p-2 rounded font-bold rounded-md text-slate-100 mt-3' %>
  <% end %>
</div>


<script>
  document.addEventListener("turbo:load", () => {
    function updateSelections(inputId, wrapperId, checkboxClass, inputName, dataAttr) {
      const searchInput = document.getElementById(inputId);
      const selectedWrapper = document.getElementById(wrapperId);
      let selectedNames = [];
      selectedWrapper.innerHTML = "";

      document.querySelectorAll(`.${checkboxClass}:checked`).forEach((checkbox) => {
        const name = checkbox.dataset[dataAttr];
        const value = checkbox.value;

        if (name) selectedNames.push(name);
        if (value) {
          const input = document.createElement("input");
          input.type = "hidden";
          input.name = inputName;
          input.value = value;
          selectedWrapper.appendChild(input);
        }
      });

      searchInput.value = selectedNames.join(", ");
    }

    function setupDropdown(inputId, dropdownId, checkboxClass, wrapperId, inputName, dataAttr) {
      const searchInput = document.getElementById(inputId);
      const dropdown = document.getElementById(dropdownId);

      searchInput.addEventListener("click", () => {
        dropdown.classList.remove("hidden");
      });

      searchInput.addEventListener("keyup", () => {
        const searchValue = searchInput.value.toLowerCase();
        const items = dropdown.querySelectorAll(".dropdown-item");

        items.forEach((item) => {
          const label = item.textContent.toLowerCase();
          item.style.display = label.includes(searchValue) ? "block" : "none";
        });
      });

      document.querySelectorAll(`.${checkboxClass}`).forEach((cb) => {
        cb.addEventListener("change", () => {
          updateSelections(inputId, wrapperId, checkboxClass, inputName, dataAttr);
        });
      });

      document.addEventListener("click", function (event) {
        if (!dropdown.contains(event.target) && !searchInput.contains(event.target)) {
          dropdown.classList.add("hidden");
        }
      });
    }

    setupDropdown(
      "searchStatus",
      "statusDropdown",
      "status-checkbox",
      "selectedStatusesWrapper",
      "status[]",
      "statusName"
    );
  });
</script>