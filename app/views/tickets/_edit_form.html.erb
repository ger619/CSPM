<%= render 'tickets/new_back' %>
<%= form_with(model: [@project, @ticket], method: :put) do |f| %>
  <div class="relative overflow-x-auto shadow-md sm:rounded-lg w-[100%] p-1">
    <h6>EDIT TICKET</h6>
    <div class="grid grid-cols-2 gap-2 h-[100%] w-[100%]">

      <div class="relative z-0 w-[100%] mb-6 group">
        <%= f.label :issue, ('issue *'), class: "capitalize block mb-1 text-sm font-medium"  %><br />
        <% if @project.special %>
          <%= f.select :issue, options_for_select(['SUPPORT', 'NEW FEATURE', 'BUG', 'REQUEST', 'INCIDENT', 'CHANGE REQUEST']), {}, class: "border border-gray-300 The Issue', required: truerounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500 dark:text-white" %>
        <% else %>
          <%= f.select :issue, options_for_select(['SUPPORT', 'NEW FEATURE', 'BUG', 'REQUEST', 'INCIDENT']), {}, class: "border border-gray-300 rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500 dark:text-white", placeholder: 'Select The Issue' %>
        <% end %>
      </div>


      <div class="relative z-0 w-full mb-6 group">
        <%= f.label :priority, ('Priority *'), class: "capitalize block mb-1 text-sm font-medium text-gray-900 dark:text-white"  %><br />
        <%= f.select :priority, ['SEVERITY 1','SEVERITY 2','SEVERITY 3','SEVERITY 4'], {}, class: "border border-gray-300 rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500", placeholder: 'Select The Issue' %>
      </div>

      <!-- Software Field -->
      <div class="relative z-0 w-full mb-6 group">
        <%= f.label :software_id, 'Product Categories *', class: "capitalize block mb-1 text-sm font-medium" %>
        <%= f.collection_select :software_id, @project.softwares, :id, :name,
                                { prompt: "Select Product" },
                                { class: "border border-gray-300 rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500 dark:text-white",
                                  id: "software-select", data: { action: "change->form#updateGroupwareOptions" } }
        %>
      </div>

      <!-- Groupware Field -->
      <div class="relative z-0 w-full mb-6 group" id="groupware-field" style="display: none;">
        <%= f.label :groupware_id, 'Sub Category *', class: "capitalize block mb-1 text-sm font-medium" %>
        <%= f.collection_select :groupware_id,
                                [], # Initially load no groupwares
                                :id,
                                :name,
                                { prompt: "Select The Product" },
                                { class: "border border-gray-300 rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500 dark:text-white",
                                  id: "groupware-select",
                                  required: true }
        %>
      </div>

      <div class="relative z-0 w-full mb-6 group">
        <%= f.label :image, 'Current Image *', class: "capitalize block mb-1 text-sm font-medium"  %><br />
        <%= image_tag f.object.ticket_image if f.object.ticket_image.present? %>
      </div>
      <div class="relative z-0 w-full mb-6 group">
        <%= f.label :image, 'Upload Image *', class: "capitalize block mb-1 text-sm font-medium text-gray-900 dark:text-white"  %><br />
        <%= f.file_field :ticket_image, accept: "image/jpeg,image/png", class: "border border-gray-300 rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500" %>
      </div>
      <div class="relative z-0 w-full mb-6 group">
        <%= f.label :attachments, 'Current Attachments', class: "capitalize block mb-1 text-sm font-medium" %><br />
        <% if f.object.attachments.attached? %>
          <ul>
            <% f.object.attachments.each do |attachment| %>
              <li class="mb-2">
                <%= link_to attachment.filename.to_s, rails_blob_path(attachment, disposition: "inline"), target: "_blank", class: "text-blue-500 underline" %>
                <%= link_to "Download", rails_blob_path(attachment, disposition: "attachment"), class: "ml-2 text-green-500 underline" %>
              </li>
            <% end %>
          </ul>
        <% else %>
          <p class="text-gray-500 italic">No files uploaded.</p>
        <% end %>
      </div>

      <div class="relative z-0 w-full mb-6 group">
        <%= f.label :attachments, 'Upload Attachments', class: "capitalize block mb-1 text-sm font-medium text-gray-900 dark:text-white" %><br />
        <%= f.file_field :attachments, multiple: true, class: "border border-gray-300 rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500" %>
      </div>

    </div>
    <div class="relative z-0 w-[100%] mb-6 group">
      <%= f.label :subject, ('Subject *'), class: "capitalize block mb-1 text-sm font-medium"  %><br />
      <%= f.text_field :subject, class: "border border-gray-300 rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500", placeholder: 'Select The Issue', required: true %>
      <% if @ticket.errors[:subject].any? %>
        <div class="text-red-500 text-sm"><%= @ticket.errors[:subject].join(", ") %></div>
      <% end %>
    </div>
    <div class="relative z-0 w-full mb-6 group">
      <%= f.label :title, ('Subject *'), class: "capitalize block mb-1 text-sm font-medium"  %><br />
      <div data-controller="text-limit" data-text-limit-limit-value="3000">
        <p id="char-count">0/3000</p>
        <%= f.rich_text_area :content, id: "content", data: { text_limit_target: "content", is_admin: current_user.has_role?(:admin) || current_user.has_role?('project manager') || current_user.has_role?('agent') }, class: "min-h-[300px] #{'border-red-500' if @ticket.errors[:content].any?}" %>
      </div>
    </div>
    <%= f.submit "Submit", class: 'mt-4 w-2/5 h-12 mb-4 h-12 bg-[#3F8CFF] hover:bg-[#3A81EB] p-3 rounded font-bold rounded-lg text-slate-100'  %>
  </div>
<% end %>

<script>
  document.addEventListener('turbo:load', function () {
    const softwareSelect = document.getElementById('software-select');
    const groupwareSelect = document.getElementById('groupware-select');
    const groupwareField = document.getElementById('groupware-field');

    function updateGroupwareOptions(softwareId, selectedGroupwareId = null) {
      // Clear existing groupware options
      groupwareSelect.innerHTML = '<option value="">Select The Product</option>';

      if (softwareId) {
        // Show the groupware field
        groupwareField.style.display = 'block';

        // Fetch groupwares associated with the selected software and project
        fetch(`/projects/<%= @project.id %>/groupwares?software_id=${softwareId}`)
          .then(response => response.json())
          .then(groupwares => {
            // Clear options and populate new groupwares
            groupwareSelect.innerHTML = '<option value="">Select The Product</option>';
            groupwares.forEach(groupware => {
              const option = document.createElement('option');
              option.value = groupware.id;
              option.textContent = groupware.name;
              if (groupware.id == selectedGroupwareId) {
                option.selected = true;
              }
              groupwareSelect.appendChild(option);
            });
          })
          .catch(error => {
            console.error('Error fetching groupwares:', error);
            groupwareSelect.innerHTML = '<option value="">Error loading groupwares</option>';
          });
      } else {
        // Hide the groupware field if no software is selected
        groupwareField.style.display = 'none';
      }
    }

    softwareSelect.addEventListener('change', function (event) {
      updateGroupwareOptions(event.target.value);
    });

    // Initially update the groupware options based on the current software selection
    updateGroupwareOptions(softwareSelect.value, '<%= @ticket.groupware_id %>');
  });
</script>