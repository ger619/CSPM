<% total_attachments = (@bug.videos.attached? ? @bug.videos.count : 0) + (@bug.images.attached? ? @bug.images.count : 0) %>
<h3>Total Attachments: <%= total_attachments %></h3>
<div class="grid grid-cols-3 gap-2 font-bold">
  <div class="col-span-2">
    <div class="grid grid-cols-4 gap-2 font-bold">
      <% media = [] %>
      <% media += @bug.videos.map { |video| { type: 'video', content: video } } if @bug.videos.attached? %>
      <% media += @bug.images.map { |image| { type: 'image', content: image } } if @bug.images.attached? %>
      <% media.shuffle.each do |item| %>
        <div class="col-span-1">
          <% if item[:type] == 'video' %>
            <video width="854" height="480" controls class="cursor-pointer zoomable-video" data-src="<%= url_for(item[:content]) %>" data-type="<%= item[:content].content_type %>" poster="/path/to/placeholder.jpg">
              <source src="<%= url_for(item[:content]) %>" type="<%= item[:content].content_type %>">
              <source src="<%= url_for(item[:content]) %>?format=mp4" type="video/mp4">
              <source src="<%= url_for(item[:content]) %>?format=webm" type="video/webm">
              Your browser does not support the video tag. Please download the video to view it:
              <a href="<%= url_for(item[:content]) %>">Download Video</a>
            </video>
          <% elsif item[:type] == 'image' %>
            <%= image_tag url_for(item[:content]), class: "w-full h-auto rounded-lg cursor-pointer zoomable-image", data: { src: url_for(item[:content]) } %>
          <% end %>
        </div>
      <% end %>
    </div>
    <!-- Modal -->
    <div id="mediaModal" class="modal">
      <span class="close">&times;</span>
      <img class="modal-content" id="modalImage" alt="Modal Image" style="display: none;">
      <video id="modalVideo" class="modal-content" controls style="display: none;"></video>
    </div>
  </div>

</div>
<style>
    .zoomable-image, .zoomable-video {
        cursor: pointer;
    }

    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 90%;
        height: 90%;
        background-color: rgba(0, 0, 0, 0.9);
        justify-content: center;
        align-items: center;
    }

    .modal-content {
        max-width: 100%;
        max-height: 100%;
        margin: auto;
        display: block;
    }

    .close {
        position: absolute;
        top: 10px;
        right: 20px;
        color: #fff;
        font-size: 30px;
        font-weight: bold;
        cursor: pointer;
    }
</style>

<script>
  document.addEventListener('turbo:load', function () {
    const modal = document.getElementById('mediaModal');
    const modalImage = document.getElementById('modalImage');
    const modalVideo = document.getElementById('modalVideo');
    const closeBtn = document.querySelector('.close');

    document.addEventListener('click', function (event) {
      if (event.target.classList.contains('zoomable-image')) {
        modal.style.display = 'flex';
        modalImage.style.display = 'block';
        modalVideo.style.display = 'none';
        modalImage.src = event.target.dataset.src;
      } else if (event.target.classList.contains('zoomable-video')) {
        modal.style.display = 'flex';
        modalVideo.style.display = 'block';
        modalImage.style.display = 'none';
        modalVideo.src = event.target.dataset.src;
        modalVideo.type = event.target.dataset.type;
      }
    });

    closeBtn.addEventListener('click', function () {
      modal.style.display = 'none';
      modalVideo.pause(); // Pause video when modal is closed
    });

    modal.addEventListener('click', function (event) {
      if (event.target === modal) {
        modal.style.display = 'none';
        modalVideo.pause(); // Pause video when modal is closed
      }
    });
  });
</script>