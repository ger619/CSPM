<%= form_with model: @team, url: team_path(@team), method: :patch, data: { turbo: false }, local: true do |f| %>
  <div class="mb-5">
    <%= f.label :name, 'Team Name', class: "block mb-2 text-sm font-medium text-gray-900 dark:text-white" %>
    <%= f.text_field :name, class: "h-12 border border-[#3F8CFF] hover:border-[#3A81EB] border-2 rounded-lg w-full dark:text-black", placeholder: 'Enter team name' %>
  </div>

  <div class="mb-5">
    <%= f.label :description, 'Description', class: "block mb-2 text-sm font-medium text-gray-900 dark:text-white" %>
    <%= f.text_area :description, class: "h-24 border border-[#3F8CFF] hover:border-[#3A81EB] border-2 rounded-lg w-full", placeholder: 'Enter team description' %>
  </div>
  <div class="mb-2">
    <%= f.label :user_ids, 'Pick Agents and Project Managers', class: "block mb-2 text-sm font-medium text-gray-900 dark:text-white" %>
  </div>
  <div class="relative w-full mb-4">
    <!-- Searchable Input -->
    <input type="text" id="searchUser" class="h-10 border border-gray-300 rounded-lg dark:text-black px-2 text-sm w-full"
           placeholder="Search User..." onclick="showDropdown()"  onkeyup="filterUserDropdown()" autocomplete="off">

    <!-- Selected Items Container -->
    <div id="selectedUsers" class="flex flex-wrap gap-2 mt-2">
      <% @team.users.each do |user| %>
        <div class="bg-blue-100 text-blue-800 px-2 py-1 rounded-md flex items-center gap-2">
          <%= user.name %> <span onclick="removeUser('<%= user.id %>', this)" class="cursor-pointer text-red-500">×</span>
        </div>
        <input type="hidden" name="team[user_ids][]" value="<%= user.id %>" class="user-input-<%= user.id %>">
      <% end %>
    </div>

    <!-- Hidden Inputs for Rails Form (Updated Name) -->
    <div id="hiddenUserInputs"></div>

    <!-- Dropdown List -->
    <div id="userDropdown" class="absolute w-full bg-white border rounded-lg mt-1 shadow-lg max-h-40 overflow-y-auto hidden">
      <% users = User.with_assigned_role.distinct %>
      <% users.each do |user| %>
        <div class="dropdown-item px-4 py-2 hover:bg-gray-100 cursor-pointer" data-user-id="<%= user.id %>" onclick="selectUser(this)">
          <%= user.name %>
        </div>
      <% end %>
    </div>
  </div>
  <div class="mb-5">
    <%= f.submit 'Update Team', class: "h-12 border border-black dark:border-white border-b-4 border-r-2 p-3 rounded font-semibold" %>
  </div>
<% end %>

<script>
  let selectedUsers = <%= @team.users.map { |user| { id: user.id, name: user.name } }.to_json.html_safe %>;

  function showDropdown() {
    document.getElementById("userDropdown").classList.remove("hidden");
  }

  function filterUserDropdown() {
    let input = document.getElementById("searchUser").value.toLowerCase();
    let items = document.querySelectorAll("#userDropdown .dropdown-item");

    items.forEach(item => {
      let text = item.textContent.toLowerCase();
      item.style.display = text.includes(input) ? "block" : "none";
    });
  }

  function selectUser(element) {
    let userId = element.getAttribute("data-user-id");
    let userName = element.textContent;

    if (!selectedUsers.some(user => user.id === userId)) {
      selectedUsers.push({ id: userId, name: userName });

      // Update Selected UI
      let tag = document.createElement("div");
      tag.className = "bg-blue-100 text-blue-800 px-2 py-1 rounded-md flex items-center gap-2";
      tag.innerHTML = `${userName} <span onclick="removeUser('${userId}', this)" class="cursor-pointer text-red-500">×</span>`;
      document.getElementById("selectedUsers").appendChild(tag);

      // Add a new hidden input for each selected user
      let input = document.createElement("input");
      input.type = "hidden";
      input.name = "team[user_ids][]"; // Ensure it's an array
      input.value = userId;
      input.classList.add(`user-input-${userId}`);
      document.getElementById("hiddenUserInputs").appendChild(input);
    }

    // Hide Dropdown
    document.getElementById("userDropdown").classList.add("hidden");
  }

  function removeUser(userId, element) {
    selectedUsers = selectedUsers.filter(user => user.id !== userId);
    element.parentElement.remove();

    // Remove hidden input
    let input = document.querySelector(`.user-input-${userId}`);
    if (input) {
      input.remove();
    }
  }
</script>